{"ast":null,"code":"var _jsxFileName = \"E:\\\\Normal File\\\\TeamUniqueCode Project\\\\\\uC5ED\\uC0AC \\uB2F5\\uC9C0 \\uC0AC\\uC774\\uD2B8\\\\src\\\\pages\\\\View.js\";\nimport React from 'react';\nimport './Commands.css';\nimport { Card, Button, Container } from 'semantic-ui-react';\nimport Clipbaord from 'react-clipboard.js';\nimport { DB } from '../file/DB.json';\n\nfunction Commands({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  console.log(DB[id]);\n  conso;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Commands\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, DB[id] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Clipbaord, {\n    \"data-clipboard-text\": Object.entries(DB[id]).map((id, {\n      header,\n      description\n    }) => `${header} : ${description}`).join('\\n'),\n    component: Button,\n    onSuccess: () => alert('복사 완료'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"\\uB2F5 \\uBCF5\\uC0AC\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(Card.Group, {\n    items: DB[id],\n    className: \"CommandsCard\",\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, id, \" \\uC790\\uB8CC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n}\n\nexport default Commands;","map":{"version":3,"sources":["E:/Normal File/TeamUniqueCode Project/역사 답지 사이트/src/pages/View.js"],"names":["React","Card","Button","Container","Clipbaord","DB","Commands","match","params","id","console","log","conso","Object","entries","map","header","description","join","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,EAAT,QAAmB,iBAAnB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV;AAAT,CAAlB,EAAiD;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYN,EAAE,CAACI,EAAD,CAAd;AACAG,EAAAA,KAAK;AAEL,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,EAAE,CAACI,EAAD,CAAF,gBACC,uDACE,oBAAC,SAAD;AAAW,2BAAqBI,MAAM,CAACC,OAAP,CAAeT,EAAE,CAACI,EAAD,CAAjB,EAAuBM,GAAvB,CAA2B,CAACN,EAAD,EAAK;AAAEO,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAL,KAAkC,GAAED,MAAO,MAAKC,WAAY,EAAvF,EAA0FC,IAA1F,CAA+F,IAA/F,CAAhC;AAAsI,IAAA,SAAS,EAAEhB,MAAjJ;AAAyJ,IAAA,SAAS,EAAE,MAAMiB,KAAK,CAAC,OAAD,CAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEd,EAAE,CAACI,EAAD,CAArB;AAA2B,IAAA,SAAS,EAAC,cAArC;AAAoD,IAAA,SAAS,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,gBAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,EAAL,kDANN,CADF,CADF;AAYD;;AAED,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport './Commands.css'\nimport { Card, Button, Container } from 'semantic-ui-react'\nimport Clipbaord from 'react-clipboard.js'\nimport { DB } from '../file/DB.json'\n\nfunction Commands({ match: { params: { id } } }) {\n  console.log(DB[id])\n  conso\n\n  return (\n    <div className='Commands'>\n      <Container>\n        {DB[id] ? (\n          <>\n            <Clipbaord data-clipboard-text={Object.entries(DB[id]).map((id, { header, description }) => `${header} : ${description}`).join('\\n')} component={Button} onSuccess={() => alert('복사 완료')}>답 복사하기</Clipbaord>\n            <Card.Group items={DB[id]} className='CommandsCard' stackable />\n          </>\n        ) : <h1>{id} 자료가 없습니다.</h1>}\n      </Container>\n    </div >\n  );\n}\n\nexport default Commands;"]},"metadata":{},"sourceType":"module"}
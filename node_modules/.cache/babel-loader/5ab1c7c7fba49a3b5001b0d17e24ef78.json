{"ast":null,"code":"import _slicedToArray from\"E:\\\\Normal File\\\\TeamUniqueCode Project\\\\2 - 1 \\uC54C\\uB9AC\\uBBF8\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import'./View.css';import{Card,Button,Container}from'semantic-ui-react';import Clipbaord from'react-clipboard.js';import{DB}from'../file/History.json';function Commands(_ref){var id=_ref.match.params.id;return/*#__PURE__*/React.createElement(\"div\",{className:\"View\"},/*#__PURE__*/React.createElement(Container,null,DB[id]?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,id),/*#__PURE__*/React.createElement(Clipbaord,{\"data-clipboard-text\":Object.entries(DB[id]).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),id=_ref3[0],_ref3$=_ref3[1],header=_ref3$.header,description=_ref3$.description;return\"\".concat(header,\" : \").concat(description);}).join('\\n'),component:Button,onSuccess:function onSuccess(){return alert('복사 완료');},onError:function onError(){return alert('오류가 발생하였습니다. 개발자에게 문의해주세요.');},style:{marginBottom:20},className:\"blue\"},\"\\uB2F5 \\uBCF5\\uC0AC\\uD558\\uAE30\"),/*#__PURE__*/React.createElement(Card.Group,{items:DB[id],itemsPerRow:4,stackable:true})):/*#__PURE__*/React.createElement(\"h1\",null,id,\" \\uC790\\uB8CC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));}export default Commands;","map":{"version":3,"sources":["E:/Normal File/TeamUniqueCode Project/2 - 1 알리미/src/pages/View.js"],"names":["React","Card","Button","Container","Clipbaord","DB","Commands","id","match","params","Object","entries","map","header","description","join","alert","marginBottom"],"mappings":"6LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,YAAP,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,SAAvB,KAAwC,mBAAxC,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,OAASC,EAAT,KAAmB,sBAAnB,CAEA,QAASC,CAAAA,QAAT,MAAiD,IAAVC,CAAAA,EAAU,MAA7BC,KAA6B,CAApBC,MAAoB,CAAVF,EAAU,CAC/C,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,oBAAC,SAAD,MACGF,EAAE,CAACE,EAAD,CAAF,cACC,qDACE,8BAAKA,EAAL,CADF,cAEE,oBAAC,SAAD,EACE,sBAAqBG,MAAM,CAACC,OAAP,CAAeN,EAAE,CAACE,EAAD,CAAjB,EAAuBK,GAAvB,CAA2B,kDAAEL,EAAF,0BAAQM,MAAR,QAAQA,MAAR,CAAgBC,WAAhB,QAAgBA,WAAhB,iBAAsCD,MAAtC,eAAkDC,WAAlD,GAA3B,EAA4FC,IAA5F,CAAiG,IAAjG,CADvB,CAEE,SAAS,CAAEb,MAFb,CAGE,SAAS,CAAE,2BAAMc,CAAAA,KAAK,CAAC,OAAD,CAAX,EAHb,CAIE,OAAO,CAAE,yBAAMA,CAAAA,KAAK,CAAC,4BAAD,CAAX,EAJX,CAKE,KAAK,CAAE,CACLC,YAAY,CAAE,EADT,CALT,CAQE,SAAS,CAAC,MARZ,oCAFF,cAYE,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAEZ,EAAE,CAACE,EAAD,CAArB,CAA2B,WAAW,CAAE,CAAxC,CAA2C,SAAS,KAApD,EAZF,CADD,cAeG,8BAAKA,EAAL,iDAhBN,CADF,CADF,CAsBD,CAED,cAAeD,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport './View.css'\nimport { Card, Button, Container } from 'semantic-ui-react'\nimport Clipbaord from 'react-clipboard.js'\nimport { DB } from '../file/History.json'\n\nfunction Commands({ match: { params: { id } } }) {\n  return (\n    <div className='View'>\n      <Container>\n        {DB[id] ? (\n          <>\n            <h1>{id}</h1>\n            <Clipbaord\n              data-clipboard-text={Object.entries(DB[id]).map(([id, { header, description }]) => `${header} : ${description}`).join('\\n')}\n              component={Button}\n              onSuccess={() => alert('복사 완료')}\n              onError={() => alert('오류가 발생하였습니다. 개발자에게 문의해주세요.')}\n              style={{\n                marginBottom: 20\n              }}\n              className='blue'\n            >답 복사하기</Clipbaord>\n            <Card.Group items={DB[id]} itemsPerRow={4} stackable />\n          </>\n        ) : <h1>{id} 자료가 없습니다.</h1>}\n      </Container>\n    </div >\n  );\n}\n\nexport default Commands;"]},"metadata":{},"sourceType":"module"}
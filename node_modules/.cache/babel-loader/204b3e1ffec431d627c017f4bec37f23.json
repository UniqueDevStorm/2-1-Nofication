{"ast":null,"code":"var _jsxFileName = \"E:\\\\Normal File\\\\TeamUniqueCode Project\\\\2 - 1 \\uC54C\\uB9AC\\uBBF8\\\\src\\\\pages\\\\View.js\";\nimport React from 'react';\nimport './View.css';\nimport { Card, Button, Container } from 'semantic-ui-react';\nimport Clipbaord from 'react-clipboard.js';\nimport { DB } from '../file/History.json';\n\nfunction Commands({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"View\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, DB[id] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(Clipbaord, {\n    \"data-clipboard-text\": Object.entries(DB[id]).map(([id, {\n      header,\n      description\n    }]) => `${header} : ${description}`).join('\\n'),\n    component: Button,\n    onSuccess: () => alert('복사 완료'),\n    onError: () => alert('오류가 발생하였습니다. 개발자에게 문의해주세요.'),\n    style: {\n      marginBottom: 20\n    },\n    className: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"\\uB2F5 \\uBCF5\\uC0AC\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(Card.Group, {\n    items: DB[id],\n    itemsPerRow: 4,\n    stackable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, id, \" \\uC790\\uB8CC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")));\n}\n\nexport default Commands;","map":{"version":3,"sources":["E:/Normal File/TeamUniqueCode Project/2 - 1 알리미/src/pages/View.js"],"names":["React","Card","Button","Container","Clipbaord","DB","Commands","match","params","id","Object","entries","map","header","description","join","alert","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,EAAT,QAAmB,sBAAnB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV;AAAT,CAAlB,EAAiD;AAC/C,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,EAAE,CAACI,EAAD,CAAF,gBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,EAAL,CADF,eAEE,oBAAC,SAAD;AACE,2BAAqBC,MAAM,CAACC,OAAP,CAAeN,EAAE,CAACI,EAAD,CAAjB,EAAuBG,GAAvB,CAA2B,CAAC,CAACH,EAAD,EAAK;AAAEI,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAL,CAAD,KAAoC,GAAED,MAAO,MAAKC,WAAY,EAAzF,EAA4FC,IAA5F,CAAiG,IAAjG,CADvB;AAEE,IAAA,SAAS,EAAEb,MAFb;AAGE,IAAA,SAAS,EAAE,MAAMc,KAAK,CAAC,OAAD,CAHxB;AAIE,IAAA,OAAO,EAAE,MAAMA,KAAK,CAAC,4BAAD,CAJtB;AAKE,IAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE;AADT,KALT;AAQE,IAAA,SAAS,EAAC,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,eAYE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEZ,EAAE,CAACI,EAAD,CAArB;AAA2B,IAAA,WAAW,EAAE,CAAxC;AAA2C,IAAA,SAAS,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADD,gBAeG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,EAAL,kDAhBN,CADF,CADF;AAsBD;;AAED,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport './View.css'\nimport { Card, Button, Container } from 'semantic-ui-react'\nimport Clipbaord from 'react-clipboard.js'\nimport { DB } from '../file/History.json'\n\nfunction Commands({ match: { params: { id } } }) {\n  return (\n    <div className='View'>\n      <Container>\n        {DB[id] ? (\n          <>\n            <h1>{id}</h1>\n            <Clipbaord\n              data-clipboard-text={Object.entries(DB[id]).map(([id, { header, description }]) => `${header} : ${description}`).join('\\n')}\n              component={Button}\n              onSuccess={() => alert('복사 완료')}\n              onError={() => alert('오류가 발생하였습니다. 개발자에게 문의해주세요.')}\n              style={{\n                marginBottom: 20\n              }}\n              className='blue'\n            >답 복사하기</Clipbaord>\n            <Card.Group items={DB[id]} itemsPerRow={4} stackable />\n          </>\n        ) : <h1>{id} 자료가 없습니다.</h1>}\n      </Container>\n    </div >\n  );\n}\n\nexport default Commands;"]},"metadata":{},"sourceType":"module"}